<appendix>
  <title id="benutzerstamm" xreflabel="Benutzerstamm">Benutzen von &check; bei schon vorhandenen Benutzern (noch nicht aktuell)</title>
  <sect1>
    <title>Vorgehensweise</title>
    <para>Achtung: Dieses Kapitel gilt noch NICHT für sophomorix </para>
    <para>Wenn sie schon - ohne mit checkscript zu arbeiten -Schüler am
      Linux-Server angemeldet haben, und sie alle ihre Schüler incl. Daten,
      Login und Passwort erhalten wollen, lautet das Prinzip: </para>
    <para>Da einige Einträge in der Schulverwaltungsdatei korrigiert werden,
      muss eine Datei <userinput>schueler.teach-in.txt</userinput> erzeugt
      werden, die alle neuen, korrigierten Einträge in die alten, im System
      vorhandenen überführt.</para>
    <para>Um die Datei <userinput>schueler.teach-in.txt</userinput> zu erzeugen
      rate ich in folgenden Schritten vorzugehen:</para>
    <para><orderedlist>
	<listitem>
	  <para>Installieren sie &check;</para>
	</listitem>
	<listitem>
	  <para>In der Datei
	    <userinput>/root/bin/schueler.protokoll</userinput> können doppelte
	    Eintrage von Schülern stehen. Um diese zu entfernen rufen Sie das
	    script <userinput>entferne_doppelte_schueler.pl</userinput>
	    auf.</para>
	</listitem>
	<listitem>
	  <para>Stellen Sie sicher , dass die Schüler, die in schueler.txt
	    stehen auch tatsächlich im System sind. Wenn sie sich nicht 100%-ig
	    sicher sind, dann rufen sie - zum letzen mal -
	    <userinput>versetzen.pl</userinput> als <userinput>root</userinput>
	    auf. </para>
	</listitem>
	<listitem>
	  <para>Kopieren Sie die momentan gültige Schülerdatei dorthin, wo sie
	    von checkscript erwartet wird: </para>
	  <para><screen>cp /usr/local/samba/users/schueler.txt /usr/local/samba/users/bsz-scripten/schueler.neuanzulegen</screen> 
	    damit diese Schülerdaten von &check; untersucht werden
	    können.</para>
	</listitem>
	<listitem>
	  <para>Rufen sie nun <userinput>checkscript.pl</userinput> auf.</para>
	</listitem>
	<listitem>
	  <para>Schauen sie sich den <userinput>report.admin</userinput>
	    an. Wenn sie viel Glück haben, sehen sie dort, dass 0 Schüler
	    angelegt WÜRDEN und 0 Schüler entfernt WÜRDEN. Damit ist der Umstieg
	  vollzogen, sie brauchen nicht weiterzulesen.</para>
	  <para>Im Normalfall würden einige ihrer Schüler entfernt werden, (wenn
	    sie Pech haben alle) und unter neuem Namen angelegt. Wenn
	    genausoviele Schüler entfernt werden, wie angelegt, ist alles in
	    Ordnung. Lesen Sie
	    weiter.</para>
	  <para>Sollten weniger Schüler angelegt werden, wie entfernt, so
	    wurden einige Einträge ausgefiltert. Sehen sie im
	    <userinput>report.office</userinput> nach und lassen sie die
	    Einträge korrigieren.</para>
	  <para>Haben sie die Datei <userinput>schueler.txt</userinput> von
	    Hand editiert und dabei im Vornamen oder Nachnamen Ziffern
	    angegeben, um z. B. einen Schüler-Loginnamen
	    <userinput>gast01</userinput> zu erzeugen, oder evtl. ein
	    Geburtsdatum im Jahr 2002 angegeben?. Dann wird dieser Eintrag nun
	    als fehlerhaft markiert, da in
	    <userinput>schueler.neuanzulegen</userinput> keine Ziffern in Namen
	    erlaubt sind. Um das Aussortieren zu verhindern, kopieren sie diese
	    Einträge in die Konfigurationsdatei
	    <userinput>extraschueler.txt</userinput>, in der Ziffern im Namen
	    und ein weiterer Bereich von Geburtsdata zugelassen sind.</para>
	  <para>Rufen sie nochmals <userinput>checkscript.pl</userinput> auf.
	    Diese Schüler sollten nun in <userinput>schueler.ok</userinput>
	    landen.</para>
	</listitem>
	<listitem>
	  <para>Um für einige Schüler das Teach-in zu umghen, (alle Schüler,
	    die nur   ASCII 7-bit Zeichen enthalten) führen sie
	    <userinput>konvertiere.pl</userinput> aus. Dieses Script
	    konvertiert alle Einträge  in
	    <userinput>schueler.protokoll</userinput> nach Kleinbuchstaben.
	    Außerdem sorgt es dafür, dass die Geburtstagsangaben mit
	    checkscript konform werden (also z. B. 01 statt 1). Die ursprüngliche
	    Datei <userinput>schueler.protokoll</userinput>findet sich als
	    <userinput>schueler.protokoll.vor-checkscript</userinput> im
	    gleichen Verzeichnis wieder.</para>
	</listitem>
	<listitem>
	  <para>Führen Sie erneut <userinput>checkscript.pl</userinput> aus.
	    Jetzt müssten eigentlich weniger Schüler neu angelegt/enfernt
	    werden (Nur diejenigen, deren Namen ein Sonderzeichen enthält, das
	    nicht korrekt umgesetzt wird).</para>
	</listitem>
	<listitem>
	  <para>Führen Sie <userinput>checkscript.pl</userinput> aus.</para>
	</listitem>
	<listitem>
	  <para>Nun geht es darum, einen Teach-in durchzuführen, der die
	    zueinanderpassenden zu entfernenden Schüler mit den neuanzulegenden
	    zusammenbringt. </para>
	  <para>Dazu muss zu jedem Schüler von ihnen eine Auswahl getroffen
	    werden. Wenn sie also noch 100 Schüler haben, die entfernt
	    werden sollten, brauchen sie ein paar Minuten.
	    ...</para>
	  <para>Rufen Sie dazu an der Konsole
	    <userinput>teach-in.pl</userinput> als <userinput>root</userinput>
	    auf. Das Programm zeigt ihnen ähnliche Schüler an. Meistens müssen
	    sie wohl eine 1 drücken. Bitte lassen sie es mich wissen, ob bzw.
	    wieoft sie auf die 2 drücken mussten. Nach dem letzten Schüler
	    beendet sich das Script.</para>
	  <para>Nachdem sie soviel Arbeit reingesteckt haben, wäre es nicht
	    schlecht, die gerade erzeugte Datei </para>
	  <para><screen>/usr/local/samba/users/bsz-scripten/konfiguration/schueler.teach-in.txt</screen> zu sichern.</para>
	</listitem>
	<listitem>
	  <para>Nun rufen sie wiederum <userinput>checkscript.pl</userinput>
	    auf. Nun sollte kein Schüler mehr entfernt werden und keiner mehr
	    angelegt werden. Damit sind sie fertig.</para>
	  <para>Falls es trotzdem noch zu enfernende/anzulegende Schüler geben
	    sollte, wiederholen sie den Teach-in und den Aufruf von
	    <userinput>checkscript.pl</userinput>. </para>
	  <para>Sollte es nicht möglich sein, soweit zu kommen, dass KEIN
	    Schüler entfernt wird und KEIN Schüler angelegt, nehmen Sie Kontakt
	    mit mir auf.</para>
	</listitem>
      </orderedlist>
    </para>
    <para>Wenn sie zu den Unglücklichen gehören, dessen Schüler mit verdrehten
      Vor und Nachnamen im System sind, sollten Sie überlegen, ob sie doch noch
      einmal alles löschen. Wenn sie das nicht können oder wollen, müssen Sie
      zu <emphasis>jedem</emphasis> Schüler einen teach-in-Eintrag
      erzeugen!</para>
    <para>Gehen sie dazu wie folgt vor (um zwischendurch eine Verschnaufpause
      und ein Erfolgserlebnis zu haben):</para>
    <para><orderedlist>
	<listitem>
	  <para>Suchen Sie die allerähnlichsten Einträge heraus mit:</para>
	  <para><screen>teach-in.pl 15</screen></para>
	  <para>Hier sollten kurze Namen gefunden werden, bei der Vornamen und
	    Nachnamen durch wenige (15 % der Gesamtzeichenanzahl)
	    Editiertschritte (Einfügen, Löschen, ...) getauscht werden können.
	    Wenn sie durch sind, dann rufen sie
	    <userinput>checkscript.pl</userinput> auf und sehen sie, dass nur
	    noch weniger Schüler entfern/angelegt werden müssen!</para>
	</listitem>
	<listitem>
	  <para>Wiederholen Sie den ersten Schritt mit dem Aufruf:</para>
	  <para><screen>teach-in.pl 25</screen></para>
	  <para>Nun werden auch weitere, ungefähr (25% Abweichung) ähnliche
	    Einträge gefunden.</para>
	</listitem>
	<listitem>
	  <para>Wiederholen Sie den ersten Schritt mit:</para>
	  <para><screen>teach-in.pl 45</screen></para>
	</listitem>
	<listitem>
	  <para>Erhöhen Sie bei Bedarf den Zahlenwert hinter
	    <userinput>tech-in.pl</userinput> weiter.</para>
	</listitem>
      </orderedlist>
</para>
  </sect1>
  <sect1>
    <title>Mögliche Probleme</title>
    <para><itemizedlist>
	<listitem>
	  <para>Ihre bisherige Schülerdatei enthält Sonderzeichen, die von
	    checkscript nicht erkannt werden. Checkscript filtert diese
	    Datensätze aus. Es ist deshalb kein teach-in möglich. </para>
	  <para>Lösung: Sie schreiben mir eine E-mail, die das Sonderzeichen
	    enthält. Ich werde es in checkscript aufnehmen.</para>
	</listitem>
      </itemizedlist>
</para>
  </sect1>
</appendix>
<!-- Dieser Kommentar bleibt am Ende des Teil-Dokuments
Erster Eintrag  : Das Parent-Dokument, das die DTD enthält
Zweiter Eintrag : Das TOP-Element des Parent-Dokuments
Dritter Eintrag : Das TOP-Element dieses Child-Dokuments
Local Variables:
mode: sgml
sgml-parent-document: ( "sophomorix.sgml" "book" "part" "appendix" )
End:
-->























