#!/usr/bin/perl -w
# Dieses Script (sophomorix-minitest) wurde von Rüdiger Beck erstellt
# Es ist freie Software
# Bei Fehlern wenden Sie sich bitte an mich.
# jeffbeck@web.de  oder  jeffbeck@gmx.de

# Dieses Script ist NICHT im Paket sophomorix-developer enthalten



# Bibliotheken
use strict;
use Getopt::Long;
use Sophomorix::SophomorixConfig;
use Sophomorix::SophomorixBase;
use Sophomorix::SophomorixAPI;
#use Sophomorix::SophomorixFiles;
use Sophomorix::SophomorixPgLdap;
use Sophomorix::SophomorixTest;
use Test::More "no_plan";
Getopt::Long::Configure ("bundling");

use DBI;
use Crypt::SmbHash;
use Net::LDAP;
#use DebAux::Debconf;

# Einlesen der Konfigurationsdatei für Entwickler
#{ package DevelConf ; do "/etc/sophomorix/devel/user/sophomorix-devel.conf"}


system("install -d /root/sophomorix-test");

############################################################
# Start
############################################################

$Conf::log_level=1;


# repair.directories einlesen
&get_alle_verzeichnis_rechte();



my $user1 = "tycho";
my $user2 = "blackmri";

&cleanup_user($user1);
&cleanup_user($user2);

#my ($type,$longname)=&pg_get_group_type("11a-A");

#print "Typ: $type \n";
#print "Name: $longname \n";



sub cleanup_user {
    my ($user) = @_;
    print "Cleaning up user $user\n";
    if (not defined getpwnam($user)){
        print "   ERROR: Cannot determine Homedirectory of user $user\n";
        print "   ... doing nothing!\n";
    } else {
        # do some work
        my @entry = getpwnam($user);
        my $homedir = "$entry[7]";

        my (@groups) = &pg_get_group_list($user);

        if (-e $homedir){
            print "   Removing contents of $homedir\n";
            system("rm -rf ${homedir}/*"); 
            
            print "Creating directories in $homedir\n";
            &provide_user_files($user,$groups[0]);
            # secondary memberships
            foreach my $group (@groups){

                print "Login $user is in $group\n";

                my ($type,$longname)=&pg_get_group_type($group);
                print "   Creating Links for secondary group $group\n";
                &create_share_link($user,$group,$longname,$type);
                print "   Creating Directories for secondary group $group\n";
                &create_share_directory($user,$group,$longname,$type);
            }
        } else {
            print "Directory $homedir does not exist\n";
        }
    }




}
