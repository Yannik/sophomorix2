#!/usr/bin/perl -w
# This script (sophomorix-minitest) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or  jeffbeck@gmx.de

# Dieses Script ist NICHT im Paket sophomorix-developer enthalten



# Bibliotheken
use strict;
use Getopt::Long;
use Sophomorix::SophomorixConfig;
use Sophomorix::SophomorixBase;
use Sophomorix::SophomorixAPI;
use Sophomorix::SophomorixPgLdap;
use Sophomorix::SophomorixTest;
use Test::More "no_plan";
Getopt::Long::Configure ("bundling");

use DBI;
use Crypt::SmbHash;
use Net::LDAP;
use IMAP::Admin;

&db_connect();




#&unlink_immutable_tree("/home/test",0);



############################################################
# The following modifies an entry in ldap
############################################################

# my $user="beckje";
# my $new_basedn="dc=example,dc=org";

my $ldap=&auth_connect();

my $login="galli";

&update_auth_ldap($ldap,$login);



# my $msg = $ldap->search(
#        base => "ou=accounts,dc=linuxmuster,dc=de",
#        scope => "sub",
#        filter => ("uid=$user")
#    );

#  my $entry = $msg->entry(0);
#  my $old_dn=$entry->dn();
#  print "Old dn:  $old_dn\n";

#  my ($without_basedn) = split(/dc=/,$old_dn);
#  my $new_dn = $without_basedn.$new_basedn;
#  print "New dn:  $new_dn \n";


# this does not work
#  $ldap->modify( $old_dn,
#                 replace => {'dn' => $new_dn}
#		);

#  $ldap->modify( $old_dn,
#                 replace => {'description' => 'test'}
#		);

&auth_disconnect($ldap);


############################################################
# sub
############################################################


sub update_auth_ldap {
    my ($ldap,$login) = @_;
    my ($home,
        $type,
        $gecos,
        $group,
        $uidnumber,
        $sambahomepath,
        $firstpassword,
        $sambaacctflags,
        $exitadminclass,
        $sambahomedrive,
        $sambakickofftime,
        $sambalmpassword,
        $sambalogofftime,
        $sambalogontime,
        $sambantpassword,
        $sambaprimarygroupsid,
        $sambapwdcanchange,
        $sambapwdlastset,
        $sambapwdmustchange,
        $sambasid,
        $surname,
        $userpassword,
        $loginshell,
        $gidnumber) = &fetchdata_from_account($login);

    # map to names used by ldap
    my $uid=$login;
    my $sn=$surname;
    my $givenname=$surname;
    my $objectclass="inetOrgPerson,posixAccount,shadowAccount,top,sambaSamAccount";
    my $homedirectory=$home;
    my $displayname=$gecos;
    my $description=$gecos;
    my $cn=$gecos;

    my $ou="accounts";
    if ($gecos eq "Computer"){
        $ou="machines";
    }


    # performance: following line must be used once:
    # but is not a Problem
    my ($ldappw,$ldap_rootdn,$dbpw,$suffix)=&fetch_ldap_pg_passwords();
    my $dn="uid=".$uid.",ou=".$ou.",".$suffix;


print "DA: $dn\n";

    my $mesg = $ldap->modify( "uid=galli,ou=accounts,dc=linuxmuster,dc=de",
       replace => {
         description => 'Members', 
#      member      => [ # Replace whole list with these
#        'cn=member1,ou=people,dc=example,dc=com',   
#        'cn=member2,ou=people,dc=example,dc=com',
#      ],
#      seeAlso => [],   # Remove attribute
       }
    );
}
