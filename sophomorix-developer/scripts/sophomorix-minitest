#!/usr/bin/perl -w
# Dieses Script (sophomorix-minitest) wurde von Rüdiger Beck erstellt
# Es ist freie Software
# Bei Fehlern wenden Sie sich bitte an mich.
# jeffbeck@web.de  oder  jeffbeck@gmx.de

# Dieses Script ist NICHT im Paket sophomorix-developer enthalten



# Bibliotheken
use strict;
use Getopt::Long;
use Sophomorix::SophomorixConfig;
use Sophomorix::SophomorixBase;
use Sophomorix::SophomorixAPI;
#use Sophomorix::SophomorixFiles;
use Sophomorix::SophomorixPgLdap;
use Sophomorix::SophomorixTest;
use Test::More "no_plan";
Getopt::Long::Configure ("bundling");

use DBI;
use Crypt::SmbHash;
use Net::LDAP;
#use DebAux::Debconf;
use IMAP::Admin;




my $ldif_local="/usr/share/sophomorix/config-templates/ldap/local-gen.ldif";


# dump the contents of slapd to ldif
# works when slapd is running or not
system("slapcat -l /root/old.ldif"); 

&dump_slapd_to_ldif();

# stop ldap
system("/etc/init.d/slapd stop"); 

# do this with a stopped ldap

# saving DB_CONFIG is not necessary, it is created anew
# cp /var/lib/ldap/DB_CONFIG /tmp/


system("rm -rf /var/lib/ldap/*");


# mv /tmp/DB_CONFIG /var/lib/ldap/
# chown openldap /var/lib/ldap/DB_CONFIG

# start ldap, so that files are created again
#
system("/etc/init.d/slapd start");

# ok
system("/etc/init.d/slapd stop");


# smbldap-populate (oder was entsprechendes von dir)
# ok
system("slapadd -l $ldif_local");

# reload the old ldif file
#system("slapadd -c -l /root/old.ldif");
# ok
&add_slapd_from_ldif();

# cat user.ldif | slapadd
# cat group.ldif | slapadd
# cat user_group | slapadd
# ok
system("chown -R openldap.openldap /var/lib/ldap/");


# start ldap
# ok
system("/etc/init.d/slapd start"); 









############################################################
# The following modifies an entry in ldap
############################################################

# my $user="beckje";
# my $new_basedn="dc=example,dc=org";

# my $ldap=&auth_connect();

# my $msg = $ldap->search(
#        base => "ou=accounts,dc=linuxmuster,dc=de",
#        scope => "sub",
#        filter => ("uid=$user")
#    );

#  my $entry = $msg->entry(0);
#  my $old_dn=$entry->dn();
#  print "Old dn:  $old_dn\n";

#  my ($without_basedn) = split(/dc=/,$old_dn);
#  my $new_dn = $without_basedn.$new_basedn;
#  print "New dn:  $new_dn \n";


# this does not work
#  $ldap->modify( $old_dn,
#                 replace => {'dn' => $new_dn}
#		);

#  $ldap->modify( $old_dn,
#                 replace => {'description' => 'test'}
#		);

#&auth_disconnect($ldap);


############################################################
# sub
############################################################
