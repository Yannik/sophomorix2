#! /bin/sh
# postinst script for sophomorix-pgldap
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.


# disable dbconfig-common
# source debconf stuff
#. /usr/share/debconf/confmodule
# source dbconfig-common stuff
#. /usr/share/dbconfig-common/dpkg/postinst.pgsql


#dbc_generate_include="perl:/root"

# do it
# parameter 1: package name
# parameter 2: arguments that were passed to the maintainer script
#dbc_go sophomorix-pgldap $@

# $1 configure (also when upgrading)
# $2 oldversion, when upgrading

new_version=`dpkg -l sophomorix-pgldap | grep 'sophomorix-pg' | { read status name version desc; echo "$version";}`

if [ "$2" == "" ]; then
    old_version="0.0.0-0"
else
    old_version=$2
fi


echo "New Version: $new_version"
echo "Old Version: $old_version"


echo "Parameter 1: $1"
echo "Parameter 2: $2"
echo "Parameter 3: $3"
echo "Parameter 4: $4"
echo "Parameter 5: $5"



#DEBHELPER#

case "$1" in
    configure)
    # checking for linuxmuster 
    if [ -e /usr/share/linuxmuster/config/dist.conf ]; then 
        echo "Hmm, I'm running on linuxmuster ..." 
 	. /usr/share/linuxmuster/config/dist.conf 
 	if [ ! -e "$INSTALLED" ]; then 
 	    echo "Linuxmuster is not yet configured." 
 	    echo "Therefore I'm skipping package configuration." 
 	    exit 0 
 	fi 
    fi 

    # calling the setup-script of sophomorix to create a new database
    echo "calling sophomorix-setup-pgldap --slapd-standalone --oldversion $old_version --newversion $new_version"
    sophomorix-setup-pgldap --slapd-standalone --oldversion "$old_version" --newversion "$new_version"

    ;;

# This option will exist in etch or so?!
#    upgrade)
#    # dont touch the database when upgrading
#    sophomorix-setup-pgldap --keep-database
#   
#    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    echo "I'm not doing anything (option: $1)"


    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0


