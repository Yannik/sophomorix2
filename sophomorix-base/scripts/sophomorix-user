#!/usr/bin/perl -w
# Dieses Script (sophomorix-user) wurde von Rüdiger Beck erstellt
# Es ist freie Software
# Bei Fehlern wenden Sie sich bitte an mich.
# jeffbeck@web.de  oder  jeffbeck@gmx.de

# ===========================================================================
# Bibliotheken
# ===========================================================================
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
#use Schedule::at;
use String::Approx 'amatch';
use Sophomorix::SophomorixConfig;
use Sophomorix::SophomorixBase;
use Time::Local;
use Time::localtime;
use Term::ANSIColor qw(:constants); # farbiger Text RED, BLUE, ...
# nach jedem Printbefehl wieder auf Standardfarbe zurücksetzen
$Term::ANSIColor::AUTORESET = 1;
use DBI;
use Net::LDAP;
use Sophomorix::SophomorixPgLdap qw(show_modulename
                                    db_connect
                                    check_connections
                                    search_user
                                    update_user_db_entry
                                    user_deaktivieren
                                    user_reaktivieren     
                                    check_sophomorix_user
                                   );

&check_connections();

my $today=`date +%d.%m.%Y`;
chomp($today);

# ===========================================================================
# Optionen verarbeiten
# ==========================================================================
$Conf::log_level=1;
my $help=0;
my $info=0;
my $freeze="";
my $permanent="";
my $removable="";
my $killable="";
my $activate="";
my $reset_user="";
my $search="";

# Parsen der Optionen
my $testopt=GetOptions(
       "verbose|v+" => \$Conf::log_level,
           "help|h" => \$help,
           "i|info" => \$info,
       "s|search=s" => \$search,
       "F|freeze=s" => \$freeze,
       "P|permanent=s" => \$permanent,
       "R|removable=s" => \$removable,
       "K|killable=s" => \$killable,
       "A|activate=s" => \$activate,
       "reset-user=s" => \$reset_user,
          );


# Prüfen, ob Optionen erkannt wurden
&check_options($testopt);



# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlbeschreibung
   print('
sophomorix-user edits the sophomorix user database.

Options
  -h  / --help
  -i  / --info
  -v  / --verbose
  -vv / --verbose --verbose
  -s string / --search string
  -F loginname   /   --freeze loginname
  -P loginname   /   --permanent loginname
  -R loginname   /   --removable loginname
  -K loginname   /   --killable loginname
  -A loginname   /   --activate loginname
  --reset-user user1,user2,...

Please see the sophomorix-user(8) man pages for full documentation
');
   print "\n";

   exit;
}


# --info
if ($info==1){
    my $usable=0;
    my $enabled=0;
    my $tolerated=0;
    my $activated=0;
    my $selfactivated=0;
    my $disabled=0;
    my $removeable=0;
    my $killable=0;
    my $frozen=0;
    my $permanent=0;
    my $total=0;


    my $others=0;

    my $usable_t=0;
    my $enabled_t=0;
    my $tolerated_t=0;
    my $activated_t=0;
    my $selfactivated_t=0;
    my $disabled_t=0;
    my $removeable_t=0;
    my $killable_t=0;
    my $frozen_t=0;
    my $permanent_t=0;

    my $total_t=0;
    my $dbh=&db_connect();

    # STUDENTS
    ##################################################
    ($usable)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='U'
                                       AND NOT adminclass='$DevelConf::teacher' 
                                       AND NOT adminclass='speicher' 
                                     ");
    ($enabled)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='E'
                                       AND NOT adminclass='${DevelConf::teacher}' 
                                       AND NOT adminclass='speicher' 
                                     ");
    ($tolerated)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='T'
                                       AND NOT adminclass='$DevelConf::teacher'
                                       AND NOT adminclass='speicher'
                                      ");
    ($activated)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='A'
                                       AND NOT adminclass='$DevelConf::teacher' 
                                       AND NOT adminclass='speicher' 
                                     ");
    ($selfactivated)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='S'
                                       AND NOT adminclass='$DevelConf::teacher' 
                                       AND NOT adminclass='speicher' 
                                     ");
    ($disabled)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='D'
                                       AND NOT adminclass='$DevelConf::teacher' 
                                       AND NOT adminclass='speicher' 
                                     ");
    ($removeable)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='R'
                                       AND NOT adminclass='$DevelConf::teacher' 
                                       AND NOT adminclass='speicher' 
                                     ");
    ($killable)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='K'
                                       AND NOT adminclass='$DevelConf::teacher' 
                                       AND NOT adminclass='speicher' 
                                     ");
    ($frozen)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='F'
                                       AND NOT adminclass='$DevelConf::teacher' 
                                       AND NOT adminclass='speicher' 
                                     ");
    ($permanent)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='P'
                                       AND NOT adminclass='$DevelConf::teacher' 
                                       AND NOT adminclass='speicher' 
                                     ");


    # TEACHERS
    ##################################################
    ($usable_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='U' 
                                       AND (adminclass='$DevelConf::teacher'
                                       OR adminclass='speicher')
                                     ");
    ($enabled_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='E'
                                       AND (adminclass='$DevelConf::teacher'
                                       OR adminclass='speicher')
                                     ");
    ($tolerated_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='T'
                                       AND (adminclass='$DevelConf::teacher'
                                       OR adminclass='speicher')
                                      ");
    ($activated_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='A'
                                       AND (adminclass='$DevelConf::teacher' 
                                       OR adminclass='speicher')
                                     ");
    ($selfactivated_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='S'
                                       AND (adminclass='$DevelConf::teacher' 
                                       OR adminclass='speicher')
                                     ");
    ($disabled_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='D'
                                       AND (adminclass='$DevelConf::teacher' 
                                       OR adminclass='speicher')
                                     ");
    ($removeable_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='R'
                                       AND (adminclass='$DevelConf::teacher' 
                                       OR adminclass='speicher')
                                     ");
    ($killable_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='K'
                                       AND (adminclass='$DevelConf::teacher' 
                                       OR adminclass='speicher')
                                     ");
    ($frozen_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='F'
                                       AND (adminclass='$DevelConf::teacher' 
                                       OR adminclass='speicher')
                                     ");
    ($permanent_t)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus='P'
                                       AND (adminclass='$DevelConf::teacher' 
                                       OR adminclass='speicher')
                                     ");




    ($others)= $dbh->selectrow_array( "SELECT count(uid) 
                                       FROM userdata
                                       WHERE sophomorixstatus IS NULL 
                                     ");


    # TOTAL
    ##################################################
    $total=$usable+$enabled+$tolerated+$activated+$selfactivated+
	$disabled+$removeable+$killable+$frozen+$permanent;

    $total_t=$usable_t+$enabled_t+$tolerated_t+$activated_t+$selfactivated_t+
	$disabled_t+$removeable_t+$killable_t+$frozen_t+$permanent_t;



    # OUTPUT
    ##################################################
    print "STUDENTS: \n";
    print "========================================\n";
    printf "%23s %8s\n","usable,unlocked (U):",$usable;
    printf "%23s %8s\n","enabled         (E):",$enabled;
    printf "%23s %8s\n","tolerated       (T):",$tolerated;
    printf "%23s %8s\n","activated       (A):",$activated;
    printf "%23s %8s\n","selfactivated   (S):",$selfactivated;
    printf "%23s %8s\n","disabled        (S):",$disabled;
    printf "%23s %8s\n","removeable      (R):",$removeable;
    printf "%23s %8s\n","killable        (K):",$killable;
    printf "%23s %8s\n","frozen          (F):",$frozen;
    printf "%23s %8s\n","permanent       (P):",$permanent;
    print "========================================\n";
    printf "%23s %8s\n","total              :",$total;

    print "\n";

    print "TEACHERS: \n";
    print "========================================\n";
    printf "%23s %8s\n","usable,unlocked (U):",$usable_t;
    printf "%23s %8s\n","enabled         (E):",$enabled_t;
    printf "%23s %8s\n","tolerated       (T):",$tolerated_t;
    printf "%23s %8s\n","activated       (A):",$activated_t;
    printf "%23s %8s\n","selfactivated   (S):",$selfactivated_t;
    printf "%23s %8s\n","disabled        (S):",$disabled_t;
    printf "%23s %8s\n","removeable      (R):",$removeable_t;
    printf "%23s %8s\n","killable        (K):",$killable_t;
    printf "%23s %8s\n","frozen          (F):",$frozen_t;
    printf "%23s %8s\n","permanent       (P):",$permanent_t;
    print "========================================\n";
    printf "%23s %8s\n","total              :",$total_t;

    print "\n";

    print "OTHERS: \n";
    printf "%23s %8s\n","others             :",$others;


    print "\n";
    exit;
}





# --freeze
if ($freeze ne""){
    print "Freezing the account of $freeze:\n";
    # check if it is really an account
    if (getpwnam("$freeze")){
	print "   - $freeze is a valid username.\n";
    } else {
	print "   - $freeze is not a valid username.\n";
        exit;
    }
    # doing the freeze
    &update_user_db_entry($freeze, 
                          "Status=F",
       #                   "TolerationDate=",
       #                   "DeactivationDate="
                         );
    &user_deaktivieren($freeze);
    exit;
}



# --permanent
if ($permanent ne""){
    print "Making the account of $permanent permanent:\n";
    # check if it is really an account
    if (getpwnam("$permanent")){
	print "   - $permanent is a valid username.\n";
    } else {
	print "   - $permanent is not a valid username.\n";
        exit;
    }
    # making the account permanent
    &update_user_db_entry($permanent, 
                          "Status=P",
    #                      "TolerationDate=",
    #                      "DeactivationDate="
                         );
    &user_reaktivieren($permanent);
    exit;
}




# --removable
if ($removable ne""){
    print "Making the account of $removable removable by sophomorix-kill:\n";
    # check if it is really an account
    if (getpwnam("$removable")){
	print "   - $removable is a valid username.\n";
    } else {
	print "   - $removable is not a valid username.\n";
        exit;
    }
    # doing the removable
    &update_user_db_entry($removable, 
                          "Status=R",
                          "TolerationDate=01.01.1970",
                          "DeactivationDate=01.01.1970");
    &user_deaktivieren($removable);
    exit;
}




# --killable
if ($killable ne""){
    print "Making the account of $killable killable by sophomorix-kill:\n";
    # check if it is really an account
#    if (getpwnam("$killable")){
    if (&check_sophomorix_user("$killable")==1){
	print "   - $killable is a valid username.\n";
    } else {
	print "   - $killable is not a valid username.\n";
        exit;
    }
    # doing the killable
    &update_user_db_entry($killable, 
                          "Status=K",
 #                         "TolerationDate=01.01.1970",
 #                         "DeactivationDate=01.01.1970"
                         );
    &user_deaktivieren($killable);
    exit;
}




# --activate
if ($activate ne""){
    print "Actvating the account of $activate:\n";
    # check if it is really an account
    if (getpwnam("$activate")){
	print "   - $activate is a valid username.\n";
    } else {
	print "   - $activate is not a valid username.\n";
        exit;
    }
    # activating the account
    &update_user_db_entry($activate, 
                          "Status=A",
                          "TolerationDate=$today",
                          "DeactivationDate=");
    &user_reaktivieren($activate);
    exit;
}


# --reset-user
if ($reset_user ne""){
    my @users=split(/,/, $reset_user);
    # repair.directories einlesen
    &get_alle_verzeichnis_rechte();
    foreach my $user (@users){
        print "Resetting the account of $user:\n";
        # check if it is really an account
        if (getpwnam("$user")){
	    print "   - $user is a valid username.\n";
        } else {
	    print "   - $user is not a valid username.\n";
            exit;
        }
        # reset the account
        &reset_user($user);
    }
    exit;
}




######################################################################
# Standard: suchen nach string
######################################################################

if ($search eq ""){
   print "I don't know what to search for! (searchstring is empty)\n";
   exit;  
}


# suche, falls $search nicht leer



############################################################
# Start
############################################################
&search_user($search);








