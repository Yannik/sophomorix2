#!/usr/bin/perl -w
# Dieses Script (sophomorix-project) wurde von Rüdiger Beck erstellt
# Es ist freie Software
# Bei Fehlern wenden Sie sich bitte an mich.
# jeffbeck@web.de  oder  jeffbeck@gmx.de


# ===========================================================================
# Bibliotheken
# ===========================================================================
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
use Sophomorix::SophomorixBase;
use Sophomorix::SophomorixAPI;
#use Sophomorix::SophomorixFiles;
#use Schedule::at;

use DBI;
use Net::LDAP;


# ===========================================================================
# Loading the db-Module, list of functions
# ===========================================================================
# list of functions to load if db is 'files'
use if ${DevelConf::db_backend} eq 'files' , 
    'Sophomorix::SophomorixFiles' => qw(show_modulename
                                        check_connections
                                        show_project_list
                                       );
# list of functions to load if db is 'pgldap'
use if ${DevelConf::db_backend} eq 'pgldap' , 
    'Sophomorix::SophomorixPgLdap' => qw(show_modulename
                                        db_connect
                                        db_disconnect
                                        adduser_to_project
                                        addadmin_to_project
                                        addproject_to_project
                                        fetchuser_from_project
                                        fetchadmin_from_project
                                        fetchprojects_from_project
                                        deleteuser_from_project
                                        deleteadmin_from_project
                                        deleteproject_from_project
                                        check_connections
                                        show_project_list
                                        show_project
                                        create_project
                                       );


# ===========================================================================
# Loading the sys-db-Module, list of functions
# ===========================================================================
# list of functions to load if sys_db is 'files'
use if ${DevelConf::sys_db} eq 'files' , 
    'Sophomorix::SophomorixSYSFiles' => qw(show_sys_modulename
                                          );

# list of functions to load if sys_db is 'pgldap'
use if ${DevelConf::sys_db} eq 'pgldap' , 
    'Sophomorix::SophomorixSYSPgLdap' => qw(show_sys_modulename
                                          );



# ===========================================================================
# Optionen verarbeiten
# ==========================================================================

# Variablen für Optionen
$Conf::log_level=1;
my $help=0;
my $info=0;
my $create=0;
$Conf::log_level=1;

my $project="";

my $k;
my $v;

my $p_long_name;
my $p_admins;
my $p_members;
my $p_projects;
my $p_add_quota;
my $p_add_mail_quota;
my $p_max_members;

#my @options=();

# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "info|i" => \$info,
           "create" => \$create,
           "verbose|v+" => \$Conf::log_level,
           "Name|project|p=s" => \$project,
           "LongName=s" => \$p_long_name,
           "Admins=s" => \$p_admins,
           "Members=s" => \$p_members,
           "MemberProjects=s" => \$p_projects,
           "AddQuota=s" => \$p_add_quota,
           "AddMailQuota=s" => \$p_add_mail_quota,
           "MaxMembers=s" => \$p_max_members,
          );

# Prüfen, ob Optionen erkannt wurden
&check_options($testopt);



# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlbeschreibung
   print('
sophomorix-project adds projects to the sophomorix database and adds users
   or groups as members to the project

Options
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose
  -i  / --info
  -i -p projectname
  -p projectname, / --project projectname 
  --create 
  --LongName projectname(long)
  --Admins user1,user2,user3, ... 
  --Members user1,user2,user3, ... 
  --MemberGroups group1,group2,group3, ... 
  --MemberProjects project1,project2,project3, ... 
  --AddQuota quotastring
  --AddMailQuota number
  --MaxMembers number

Please see the sophomorix-project(8) man pages for full documentation
');
   print "\n";
   exit;
}



# show the Database Modules that are loaded
&show_modulename();
&show_sys_modulename();
&check_connections();



# --info
if ($project eq "" and $info==1){
    &show_project_list();
    exit;
}


if ($project ne "" and $info==1){
    &show_project($project);
    exit;
}





# ===========================================================================
# Programmbeginn
# ===========================================================================

&check_datei_touch("${DevelConf::dyn_config_pfad}/projects_db");

# repair.directories einlesen
&get_alle_verzeichnis_rechte();

# create/update project
&create_project($project,$create,$p_long_name,$p_add_quota,$p_add_mail_quota,
                $p_max_members,$p_members,$p_admins,$p_projects);


