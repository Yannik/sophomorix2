#!/usr/bin/perl -w
# $Id$
# Dieses Script (sophomorix-support) wurde von Rüdiger Beck erstellt
# Es ist freie Software
# Bei Fehlern wenden Sie sich bitte an mich.
# jeffbeck@web.de  oder  jeffbeck@gmx.de

# ===========================================================================
# Bibliotheken
# ===========================================================================
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");

use Sophomorix::SophomorixConfig;
use Sophomorix::SophomorixBase;

# Variablen für Optionen

my @arguments = @ARGV;
my $config_file="/usr/share/sophomorix/devel/sophomorix-support.conf";
my $create_dir="/root/sophomorix-support";
my $logfile="support.log";

my $hostname=`hostname`;
chomp($hostname);
my $dnsdomainname=`dnsdomainname`;
chomp($dnsdomainname);
my $timestamp = `date '+%Y-%m-%d_%H-%M'`;
chomp($timestamp);
my $treename=$hostname.".".$dnsdomainname."-".$timestamp;
my $support_tree="${create_dir}/${treename}";



$Conf::log_level=1;
my $help=0;
my $info=0;

# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "info|i" => \$info,
          );


# Prüfen, ob Optionen erkannt wurden
&check_options($testopt);
&log_script_start(@arguments);


# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlbeschreibung
   print "\n$scriptname packages files to be sent to the support.\n\n";
   print('
Options
  -h  / --help
  -i  / --info

Please see the sophomorix-support(8) man pages for full documentation
');
   print "\n";
   exit;
}


# --info
if ($info==1) {
    my @files=&read_config();
    &titel("These files are packaged:");
    foreach my $file (@files){
        print "   $file \n";
    }
    exit;
}



# no options 

# prepare
my @files=&read_config();
system("install -d $support_tree");
open (LOG,">${support_tree}/${logfile}");

# creating a tree
&titel("Copying the following files");
foreach my $file (@files){
    print "   $file \n";

    if (-e $file) {
        print LOG "copying:      $file \n";
        system ("install -D $file ${support_tree}${file}");
    } else {
        print LOG "not existing: $file \n";
    }
}


# zipping the tree
&titel("Packaging files in ${support_tree}");
system("cd $create_dir; zip -r  ./${treename}.zip ./${treename}");
close(LOG);





############################################################
# sub
############################################################

sub read_config {
    my @configs=();
    open(CONFIG, "<$config_file");
    while (<CONFIG>) {
        if(/^\#/){ # # am Anfang bedeutet Kommentarzeile
            next;
        }
        chomp();
        my $line=$_;
        if ($line ne ""){
            push @configs, $line;
        }
    }
    close(CONFIG);
    @configs = sort @configs;
    return @configs;
}

